#!/bin/bash

if ! DOWNLOAD_PAGE=$(curl -fsSkL http://nodejs.org/download/); then
  exit 1;
fi

NODE_VERSION=$(echo "$DOWNLOAD_PAGE" \
               | awk '/Current version:/ { print }' \
               | awk -F"[<>]" '{ print $5 }')

# Test system's node version if we have node installed
if command -v node >/dev/null 2>&1; then
  SYSTEM_NODE_VERSION=`node -v`
  NODE_POSITION=`which node`
else
  SYSTEM_NODE_VERSION='v0.0.0'
  NODE_POSITION='/usr/local/bin/node.exe'
fi

# Trim spaces
SYSTEM_NODE_VERSION=`echo $SYSTEM_NODE_VERSION | sed 's/^ *\(.*\) *$/\1/'`

if [[ $NODE_VERSION != $SYSTEM_NODE_VERSION ]]; then
  case $OSTYPE in
    darwin*) NODE_PLATFORM=darwin ;;
    linux*) NODE_PLATFORM=linux ;;
    cygwin*) NODE_PLATFORM=cygwin ;;
    *) echo "Unsupported platform $OSTYPE" && exit 1 ;;
  esac

  if uname -a | grep 'x86_64' > /dev/null ; then
    NODE_ARCH=x64
  else
    NODE_ARCH=x86
  fi

  # Download node and untar
  if [[ $NODE_PLATFORM == 'cygwin' ]]; then
    NODE_DIST_NAME="node"
    NODE_TARBALL_URL="http://nodejs.org/dist/$NODE_VERSION/x64/$NODE_DIST_NAME.exe"
  else
    NODE_DIST_NAME="node-$NODE_VERSION-$NODE_PLATFORM-$NODE_ARCH"
    NODE_TARBALL_URL="http://nodejs.org/dist/$NODE_VERSION/$NODE_DIST_NAME.tar.gz"
  fi

  TEMP_DIR=`mktemp -d /tmp/dotfiles_node_XXXXXX`
  trap "rm -rf $TEMP_DIR" EXIT
  cd "$TEMP_DIR"

  if [[ $NODE_PLATFORM == 'cygwin' ]]; then
    curl -fsSkL $NODE_TARBALL_URL > node.exe || exit 1
    cp node.exe "$NODE_POSITION"
  else
    curl -fsSkL $NODE_TARBALL_URL | tar -zx || exit 1

    # Install
    rm $NODE_DIST_NAME/ChangeLog
    rm $NODE_DIST_NAME/LICENSE
    rm $NODE_DIST_NAME/README.md
    sudo cp -r $NODE_DIST_NAME/* /usr/local/ || exit 1
  fi

  # Fix the npmlog not found bug under OS X
  if [[ $NODE_PLATFORM == 'darwin' ]]; then
    curl -fsSkL https://npmjs.org/install.sh | sudo sh > /dev/null || exit 1
  fi

  # Clean
  if [[ $NODE_PLATFORM != 'cygwin' ]]; then
    rm -rf $NODE_DIST_NAME
    cd - > /dev/null
  fi
fi
